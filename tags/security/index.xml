<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>security on Linuxera</title>
    <link>https://linuxera.org/tags/security/</link>
    <description>Recent content in security on Linuxera</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://linuxera.org/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Signing and verifying container images with Cosign and your own PKI</title>
      <link>https://linuxera.org/signing-verifying-container-images-with-cosign-own-pki/</link>
      <pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/signing-verifying-container-images-with-cosign-own-pki/</guid>
      <description>Signing and verifying container images with Cosign and your own PKI In this post we are going to cover how we can sign and verify container images using Cosign and our own PKI. You can learn more on how to build your own PKI with CFSSL in this post.
Warning
The way we will see to sign and verify images in this post is not the recommended approach. For production usage, you should use ephemeral keys as described here.</description>
    </item>
    
    <item>
      <title>Running Vault on Podman</title>
      <link>https://linuxera.org/running-vault-on-podman/</link>
      <pubDate>Tue, 14 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/running-vault-on-podman/</guid>
      <description>Running Vault on Podman This post explains how to run a local Vault deployment on Podman for non-production use. I typically use this setup for my lab environments.
This setup was tested with:
Podman v4.7.2 Podman-compose v1.0.6 Vault v1.15.2 Prerequisites Install the vault client, you can get the binary for your O.S here.
curl -L https://releases.hashicorp.com/vault/1.15.2/vault_1.15.2_linux_amd64.zip -o /tmp/vault.zip unzip /tmp/vault.zip &amp;amp;&amp;amp; rm -f /tmp/vault.zip sudo mv vault /usr/local/bin/ Generate folder for storing the configs, data, and certs.</description>
    </item>
    
    <item>
      <title>OpenShift 4 User Certificates</title>
      <link>https://linuxera.org/user-certificates-in-openshift4/</link>
      <pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/user-certificates-in-openshift4/</guid>
      <description>User Certificates in OpenShift 4 Attention
The information described in this blog post may not be a supported configuration for OpenShift 4. Please, refer to the official docs for supported documentation.
In this blog we will see how we can create OpenShift Users using client certificates and how to configure the API Server, so we can create client certificates using custom CAs. The information described in this blog was last tested with OpenShift 4.</description>
    </item>
    
    <item>
      <title>Working with Pod Security Standards</title>
      <link>https://linuxera.org/working-with-pod-security-standards/</link>
      <pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/working-with-pod-security-standards/</guid>
      <description>Working with Pod Security Standards In Kubernetes v1.25 Pod Security admission has moved to stable, replacing Pod Security Policy admission. This feature has been in beta and enabled by default since Kubernetes v1.23 in this post we are going to cover what&amp;rsquo;s new with Pod Security Admission (PSA) and how it affects the workloads being deployed in our clusters.
Note
For this post I&amp;rsquo;ll be running a Kubernetes v1.25 cluster. If you want to try this in your own environment you can use your favorite tool to get a K8s cluster up and running, I&amp;rsquo;ll be using kcli.</description>
    </item>
    
    <item>
      <title>Container Security - Linux Capabilities and Secure Compute Profiles</title>
      <link>https://linuxera.org/container-security-capabilities-seccomp/</link>
      <pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://linuxera.org/container-security-capabilities-seccomp/</guid>
      <description>Container Security - Linux Capabilities and Secure Compute Profiles In this post we are going to see two security mechanisms used in Linux Containers in order to provide a security layer for our workloads.
We will see how Linux Capabilities and Secure Compute Profiles can be used for limiting the attack surface for our containers.
The first part of the blog post will be an introduction to Linux Capabilities and Secure Compute Profiles, second part will show how these technologies work through the use of demos.</description>
    </item>
    
  </channel>
</rss>
